{
  "root": true,
  "extends": [
    "next",
    "next/core-web-vitals",
    "prettier",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "@stylistic/eslint-plugin"],
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "rules": {
    "@stylistic/arrow-spacing": "error",
    "@stylistic/comma-spacing": "error",
    "@stylistic/comma-dangle": [
      "error",
      {
        "objects": "always-multiline",
        "arrays": "always-multiline",
        "functions": "always-multiline",
			  "imports": "always-multiline"
      }
    ],
    "@stylistic/jsx-quotes": "error",
    "@stylistic/key-spacing": "error",
    "@stylistic/keyword-spacing": "error",
    "@stylistic/indent": ["error", "tab"],
    "@stylistic/semi": "error",
    "@stylistic/quotes": ["error", "single"],
    "@stylistic/space-infix-ops": "error",
    "@stylistic/multiline-ternary": ["error", "always-multiline"],
    "@stylistic/object-curly-spacing": ["error", "always"],
    "@stylistic/dot-location": ["error", "property"],
    "@stylistic/no-multi-spaces": "error",
    "@stylistic/no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 0 }],
    "@stylistic/no-mixed-operators": "error",
    "@stylistic/no-mixed-spaces-and-tabs": "error",
    "@stylistic/nonblock-statement-body-position": "error",
    "@stylistic/no-whitespace-before-property": "error",
    "@stylistic/no-trailing-spaces": "error",
    "@stylistic/newline-per-chained-call": [
      "error",
      { "ignoreChainWithDepth": 1 }
    ],
    "@stylistic/type-generic-spacing": "error",
    "@stylistic/type-named-tuple-spacing": "error",
    "@stylistic/indent-binary-ops": ["error", "tab"],
    "@stylistic/max-len": [
      "error",
      {
        "code": 80,
        "tabWidth": 2,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true,
        "ignoreComments": true
      }
    ],
    "@stylistic/padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "class",
          "function",
          "export",
          "try",
          "if",
          "return",
          "expression",
          "multiline-const",
          "multiline-var",
          "multiline-let"
        ]
      },

      {
        "blankLine": "always",
        "prev": ["multiline-const", "multiline-var", "multiline-let"],
        "next": "*"
      },

      {
        "blankLine": "always",
        "prev": "directive",
        "next": "*"
      }
    ],
    "capitalized-comments": "error",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "fixStyle": "inline-type-imports"
      }
    ],
    "@typescript-eslint/array-type": ["error", { "default": "generic" }],
    "@typescript-eslint/no-extraneous-class": "off",
    "@typescript-eslint/no-mixed-spaces-and-tabs": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-tabs": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/no-namespace": [
      "error",
      {
        "allowDeclarations": true
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },

      {
        "selector": "variable",
        "format": ["camelCase"]
      },

      {
        "selector": "variable",
        "modifiers": ["const"],
        "format": ["camelCase", "UPPER_CASE"]
      },

      {
        "selector": "property",
        "format": ["camelCase", "snake_case"]
      },

      {
        "selector": "import",
        "format": ["camelCase", "PascalCase"]
      },

      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"]
      },

      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },

      {
        "selector": "memberLike",
        "format": ["camelCase"]
      },

      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ]
  }
}
